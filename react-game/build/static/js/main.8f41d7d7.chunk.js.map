{"version":3,"sources":["components/js/Header.js","components/js/Cadencer.js","components/js/Apple.js","assets/img/appleGreen.svg","assets/img/appleRed.svg","assets/img/appleYellow.svg","assets/img/cutting-board.svg","components/js/contexts.js","components/js/Board.js","assets/sound/bonus.wav","assets/sound/fail.wav","assets/sound/kick.wav","assets/sound/respawn.wav","components/js/PlayScreen.js","components/js/Button.js","components/js/ScoreBar.js","components/js/ControlsBox.js","components/js/GameOver.js","components/js/Settings.js","components/js/Game.js","assets/img/rsSchoolJS.svg","components/js/Footer.js","components/js/App.js","reportWebVitals.js","index.js"],"names":["Header","className","Cadencer","callback","cadence","this","isPaused","timerID","undefined","setTimeout","_run","bind","clearTimeout","start","stop","apples","green","red","yellow","Apple","props","trajectory","onAnimationEnd","data-key","dataKey","src","color","alt","GameContext","React","createContext","Board","useState","left","setLeft","keyStuck","setStuck","pause","useContext","active","maxBoardLeft","setMaxBoardLeft","useEffect","onKeyDown","event","newLeft","keyCode","onKeyUp","window","addEventListener","removeEventListener","getBoardInstance","document","getElementById","rem","parseFloat","getComputedStyle","documentElement","fontSize","board","getBoundingClientRect","right","getMaxBoardLeftPosition","id","onClick","clientX","currentTarget","x","boardWidth","style","cadencer","colors","trajectories","PlayScreen","getRandomInt","min","max","Math","ceil","floor","random","setNewApples","setBoard","restart","setRestart","soundEnabled","useSound","bonusSfxFile","bonusSfx","failSfxFile","failSfx","kickSfxFile","kickSfx","respawnSfxFile","respawnSfx","playSound","sound","onAppleAnimationEnd","animation","animationName","removeApple","key","dataset","filter","apple","Number","getBorders","DOMElement","incScore","includes","appleBorders","target","boardBorders","isAppleAndBoardCollide","classList","add","remove","length","offsetWidth","decTries","setCallback","Date","now","setCadence","map","Button","disabled","caption","ScoreBar","score","tries","ControlsBox","pauseCaption","setPauseCaption","fullScreenCaption","setFullScreenCaption","setPause","setActive","setGameOver","setSettings","onFullScreenChange","fullScreenToggler","GameOver","Settings","maxTries","setMaxTries","setSoundEnabled","htmlFor","name","value","onChange","localStorage","setItem","type","checked","String","initialValues","Game","setScore","getInitialValue","setTries","gameOver","settings","fullScreenMode","setFullScreenMode","fullScreenHandle","useFullScreenHandle","item","getItem","handle","Provider","exit","enter","Footer","href","rel","logo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"ybAUeA,MARf,WACE,OACE,qBAAKC,UAAU,SAAf,SACE,oBAAIA,UAAU,QAAd,0B,+CCLeC,E,WACnB,aAA8C,IAAlCC,EAAiC,uDAAtB,KAAMC,EAAgB,uDAAN,IAAM,oBAC3CC,KAAKD,QAAUA,EACfC,KAAKC,UAAW,EAChBD,KAAKF,SAAWA,EAChBE,KAAKE,aAAUC,E,wCAEjB,WACMH,KAAKC,WACTD,KAAKF,WACLE,KAAKE,QAAUE,WAAWJ,KAAKK,KAAKC,KAAKN,MAAOA,KAAKD,Y,mBAEvD,WACMC,KAAKC,WACPD,KAAKC,UAAW,EAChBD,KAAKK,U,kBAGT,WACEL,KAAKC,UAAW,EAChBM,aAAaP,KAAKE,W,oBAEpB,WACE,OAAIF,KAAKC,UACPD,KAAKQ,SACE,IAEPR,KAAKS,QACE,K,wBAGX,SAAWV,GACTC,KAAKD,QAAUA,I,wBAEjB,WACE,OAAOC,KAAKD,U,yBAGd,SAAYD,GACVE,KAAKF,SAAWA,M,KClCdY,G,MAAS,CACbC,MCNa,IAA0B,uCDOvCC,IEPa,IAA0B,qCFQvCC,OGRa,IAA0B,0CHmB1BC,MARf,SAAeC,GACb,OACE,qBAAKnB,UAAS,gBAAWmB,EAAMC,YAAcC,eAAgBF,EAAME,eAAgBC,WAAUH,EAAMI,QAAnG,SACE,qBAAKvB,UAAU,cAAcwB,IAAKV,EAAOK,EAAMM,OAAQC,IAAI,aIdlD,G,MAAA,IAA0B,2CCE5BC,EAAcC,IAAMC,gBC+ElBC,MAzEf,SAAeX,GAAQ,IAAD,EACEY,mBAAS,GADX,mBACfC,EADe,KACTC,EADS,OAEOF,oBAAS,GAFhB,mBAEfG,EAFe,KAELC,EAFK,KAGdC,EAAUC,qBAAWV,GAArBS,MACAE,EAAWD,qBAAWV,GAAtBW,OAJc,EAKkBP,mBAAS,GAL3B,mBAKfQ,EALe,KAKDC,EALC,KAkEpB,OA3DAC,qBAAU,WACR,SAASC,EAAUC,GACjB,GAAKL,IAAUF,IAASF,EAAxB,CACAC,GAAS,GACT,IAAIS,EAAUZ,EACQ,KAAlBW,EAAME,QAGRD,GADAA,GAjBU,GAkBU,EAAI,EAAIA,EACD,KAAlBD,EAAME,UAGfD,GADAA,GArBU,GAsBUL,EAAeA,EAAeK,GAEhDZ,IAASY,GACXX,EAAQW,IAIZ,SAASE,IACPX,GAAS,GAMX,OAHAY,OAAOC,iBAAiB,UAAWN,GACnCK,OAAOC,iBAAiB,QAASF,GAE1B,WACLC,OAAOE,oBAAoB,UAAWP,GACtCK,OAAOE,oBAAoB,QAASH,OAIxCL,qBACE,WACEtB,EAAM+B,iBAAiBC,SAASC,eAAe,kBAGjD,IAIFX,qBAAU,WAMRD,EALA,WACE,IAAMa,EAAMC,WAAWC,iBAAiBJ,SAASK,iBAAiBC,UAC5DC,EAAQP,SAASC,eAAe,SACtC,OAAQM,EAAMC,wBAAwBC,MAAQF,EAAMC,wBAAwB3B,MAAQqB,EAtDvE,GAwDCQ,OAahB,qBAAK7D,UAAU,QAAQ8D,GAAG,QAAQC,QAVpC,SAA2BpB,GACzB,GAAKL,IAAUF,EAAf,CACA,IAAMiB,EAAMC,WAAWC,iBAAiBJ,SAASK,iBAAiBC,UAC9Db,GAAWD,EAAMqB,QAAUrB,EAAMsB,cAAcN,wBAAwBO,GAAKb,EAAMc,IAGtFlC,EADAW,GADAA,EAAUA,EAAU,EAAI,EAAIA,GACRL,EAAeA,EAAeK,KAKlD,SACE,qBAAK5C,UAAU,cAAc8D,GAAG,cAAcM,MAAO,CAAEpC,KAAK,GAAD,OAAKA,EAAL,QAAkBR,IAAKkC,EAAOhC,IAAI,a,OC5EpF,MAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,oCCYrC2C,EAAW,IAAIpE,EACbqE,EAAS,CAAC,MAAO,SAAU,SAC3BC,EAAe,CAAC,cAAe,cAAe,eAwIrCC,MApIf,SAAoBrD,GAClB,SAASsD,EAAaC,EAAKC,GAGzB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,EAJ9B,MAOI3C,mBAAS,IAPb,mBAOpBjB,EAPoB,KAOZkE,EAPY,OAQDjD,mBAAS,MARR,mBAQpB2B,EARoB,KAQbuB,EARa,KASnB7C,EAAUC,qBAAWV,GAArBS,MACAE,EAAWD,qBAAWV,GAAtBW,OAVmB,EAWKD,qBAAWV,GAAnCuD,EAXmB,EAWnBA,QAASC,EAXU,EAWVA,WACThF,EAAYkC,qBAAWV,GAAvBxB,QACAiF,EAAiB/C,qBAAWV,GAA5ByD,aAbmB,EAcNC,YAASC,GAArBC,EAdkB,sBAePF,YAASG,GAApBC,EAfkB,sBAgBPJ,YAASK,GAApBC,EAhBkB,sBAiBJN,YAASO,GAAvBC,EAjBkB,oBAmBzB,SAASC,EAAUC,GACI,SAAjBX,GACFW,IA+CJ,SAASC,EAAoBrD,GAC3B,IAAMsD,EAAYtD,EAAMuD,cAkBxB,SAASC,IACP,IAAMC,EAAMzD,EAAMsB,cAAcoC,QAAQD,IACxCpB,EACElE,EAAOwF,QAAO,SAACC,GACb,OAAOC,OAAOD,EAAMH,OAASI,OAAOJ,OAW1C,SAASK,EAAWC,GAClB,MAAO,CACL1E,KAAM0E,EAAW/C,wBAAwB3B,KACzC4B,MAAO8C,EAAW/C,wBAAwBC,OA5G7B,sBAyEbqC,GACF9E,EAAMwF,WACNb,EAAUP,GACVY,KACSF,EAAUW,SA5EM,mBA+G3B,WACE,IAAMC,EAAeJ,EAAW9D,EAAMmE,QAChCC,EAAeN,EAAW/C,GAChC,OACGmD,EAAa7E,KAAO+E,EAAanD,OAASiD,EAAa7E,KAAO+E,EAAa/E,MAAU6E,EAAajD,MAAQmD,EAAa/E,MAAQ6E,EAAajD,MAAQmD,EAAanD,MAtChKoD,GAIFrE,EAAMsB,cAAcgD,UAAUC,IAAI,SAkBpCvE,EAAMsB,cAAcgD,UAAUE,OAA9B,oBAAkDlB,EAAUA,EAAUmB,OAAS,KAC1EzE,EAAMsB,cAAcoD,YACzB1E,EAAMsB,cAAcgD,UAAUC,IAA9B,oBAA+CjB,EAAUA,EAAUmB,OAAS,KAtB1EtB,EAAUH,KAKZxE,EAAMmG,WACNxB,EAAUL,GACVU,KAkCJ,OAlFA9B,EAASkD,aAPT,WACE,IAAM9F,EAAQ6C,EAAOG,EAAa,EAAGH,EAAO8C,OAAS,IAC/ChG,EAAamD,EAAaE,EAAa,EAAGF,EAAa6C,OAAS,IACtEpC,EAAa,GAAD,mBAAKlE,GAAL,CAAa,CAAEW,QAAOL,aAAYgF,IAAKoB,KAAKC,UACxD3B,EAAUD,MAKZpD,qBAAU,WACJH,EACGF,GAIHe,SAASC,eAAe,kBAAkB6D,UAAUC,IAAI,UACxD7C,EAASxD,SAJTsC,SAASC,eAAe,kBAAkB6D,UAAUE,OAAO,UAC3D9C,EAASzD,UAMXuC,SAASC,eAAe,kBAAkB6D,UAAUC,IAAI,UACxD7C,EAASxD,UAEV,CAACyB,EAAQF,IAEZK,qBAAU,WACR4B,EAASqD,WAAWvH,KACnB,CAACA,IAEJsC,qBACE,WACMyC,IACFF,EAAa,IACbG,GAAW,MAIf,CAACD,IAsDD,sBAAKlF,UAAU,aAAf,UACE,qBAAKA,UAAU,YACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,iBAAiB8D,GAAG,iBAAnC,SACGhD,EAAO6G,KAAI,SAACpB,GACX,OAAO,cAAC,EAAD,CAAOlF,eAAgB2E,EAAqCzE,QAASgF,EAAMH,IAAK3E,MAAO8E,EAAM9E,MAAOL,WAAYmF,EAAMnF,YAArEmF,EAAMH,UAGlE,cAAC,EAAD,CAAOlD,iBAtGX,SAA0BwD,GACxBzB,EAASyB,U,YClCEkB,MARf,SAAgBzG,GACd,OACE,wBAAQ0G,SAA6B,SAAnB1G,EAAM0G,SAAoC7H,UAAU,SAAS8D,GAAI3C,EAAM2C,GAAIC,QAAS5C,EAAM4C,QAA5G,SACG5C,EAAM2G,W,MCUEC,MAbf,SAAkB5G,GAChB,OACE,sBAAKnB,UAAU,WAAf,UACE,iDACoB,sBAAMA,UAAU,eAAhB,SAAgCmB,EAAM6G,WAE1D,iDACoB,sBAAMhI,UAAU,eAAhB,SAAgCmB,EAAM8G,eCmEjDC,MAtEf,SAAqB/G,GAAQ,IAAD,EACYY,mBAAS,UADrB,mBACrBoG,EADqB,KACPC,EADO,OAEsBrG,mBAAS,cAF/B,mBAErBsG,EAFqB,KAEFC,EAFE,OAGAjG,qBAAWV,GAA/BS,EAHoB,EAGpBA,MAAOmG,EAHa,EAGbA,SAHa,EAIElG,qBAAWV,GAAjCW,EAJoB,EAIpBA,OAAQkG,EAJY,EAIZA,UACRrD,EAAe9C,qBAAWV,GAA1BwD,WACAsD,EAAgBpG,qBAAWV,GAA3B8G,YACAC,EAAgBrG,qBAAWV,GAA3B+G,YAiDN,OAvBAjG,qBAAU,WAEN2F,EADEhG,EACc,SAEA,WAEjB,CAACA,IAEJK,qBAAU,WACR,SAASkG,EAAmBhG,GAExB2F,EADwB,eAAtBD,EACmB,SAEA,cAKzB,OADAlF,SAASH,iBAAiB,mBAAoB2F,GACvC,WACLxF,SAASF,oBAAoB,mBAAoB0F,OAKnD,sBAAK3I,UAAU,cAAf,UACE,cAAC,EAAD,CAAUgI,MAAO7G,EAAM6G,MAAOC,MAAO9G,EAAM8G,QAC3C,sBAAKjI,UAAU,UAAf,UACE,cAAC,EAAD,CAAQ6H,SAAS,QAAQ/D,GAAG,UAAUgE,QAAQ,WAAW/D,QAnD/D,WACMzB,GAAQ6C,GAAW,GACvBqD,GAAU,GACVD,GAAS,MAiDL,cAAC,EAAD,CAAQV,SAAQ,WAAMvF,GAAUwB,GAAG,QAAQgE,QAASK,EAAcpE,QAhCxE,WACEwE,GAAUnG,MAgCN,cAAC,EAAD,CAAQyF,SAAQ,WAAMvF,GAAUwB,GAAG,MAAMgE,QAAQ,MAAM/D,QA/C7D,WACEyE,GAAU,GACVC,GAAY,MA8CR,cAAC,EAAD,CAAQZ,SAAS,QAAQ/D,GAAG,WAAWgE,QAAQ,WAAW/D,QA3ChE,WACMzB,GAAQiG,GAAS,GACrBG,GAAY,MA0CR,cAAC,EAAD,CAAQb,SAAS,QAAQ/D,GAAG,aAAagE,QAASO,EAAmBtE,QAvC3E,WACE5C,EAAMyH,8B,WCNKC,MApBf,SAAkB1H,GAAQ,IAClBsH,EAAgBpG,qBAAWV,GAA3B8G,YACAtD,EAAe9C,qBAAWV,GAA1BwD,WAON,OACE,qBAAKnF,UAAU,iBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,2CACA,iDAAoBmB,EAAM6G,SAC1B,cAAC,EAAD,CAAQH,SAAS,QAAQ/D,GAAG,aAAagE,QAAQ,KAAK/D,QAV5D,WACEoB,GAAW,GACXsD,GAAY,Y,MCoDDK,MA1Df,WAAqB,IACbJ,EAAgBrG,qBAAWV,GAA3B+G,YADY,EAEYrG,qBAAWV,GAAnCxB,EAFY,EAEZA,QAASuH,EAFG,EAEHA,WAFG,EAGcrF,qBAAWV,GAArCoH,EAHY,EAGZA,SAAUC,EAHE,EAGFA,YAHE,EAIsB3G,qBAAWV,GAA7CyD,EAJY,EAIZA,aAAc6D,EAJF,EAIEA,gBAqBpB,OACE,qBAAKjJ,UAAU,iBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,0CACA,gCACE,sBAAKA,UAAU,UAAf,UACE,uBAAOkJ,QAAQ,UAAf,sCACA,yBAAQpF,GAAG,UAAUqF,KAAK,UAAUC,MAAOjJ,EAASkJ,SA1B9D,SAAyB1G,GACvB+E,EAAW/E,EAAMmE,OAAOsC,OACxBE,aAAaC,QAAQ,UAAW5G,EAAMmE,OAAOsC,QAwBrC,UACE,wBAAQA,MAAM,OAAd,mBACA,wBAAQA,MAAM,QAAd,oBACA,wBAAQA,MAAM,QAAd,0BAGJ,sBAAKpJ,UAAU,UAAf,UACE,uBAAOkJ,QAAQ,UAAf,uBACA,yBAAQpF,GAAG,UAAUqF,KAAK,UAAUC,MAAOL,EAAUM,SA7B/D,SAA0B1G,GACxBqG,EAAYrG,EAAMmE,OAAOsC,OACzBE,aAAaC,QAAQ,QAAS5G,EAAMmE,OAAOsC,QA2BnC,UACE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,qBAIJ,sBAAKpJ,UAAU,UAAf,UACE,uBAAOkJ,QAAQ,QAAf,0BACA,uBAAOpF,GAAG,QAAQ0F,KAAK,WAAWL,KAAK,QAAQM,QAA0B,SAAjBrE,EAAwCiE,SAjC1G,SAA4B1G,GAC1BsG,EAAgBS,OAAO/G,EAAMmE,OAAO2C,UACpCH,aAAaC,QAAQ,QAASG,OAAO/G,EAAMmE,OAAO2C,mBAkC9C,cAAC,EAAD,CAAQ5B,SAAS,QAAQ/D,GAAG,aAAagE,QAAQ,KAAK/D,QA/B5D,WACE2E,GAAY,Y,OCnBViB,EAAgB,CACpB1B,MAAO,EACP9H,QAAS,IACT4F,MAAO,QAiGM6D,MA9Ff,WAAiB,IAAD,EACU7H,mBAAS,GADnB,mBACTiG,EADS,KACF6B,EADE,OAEU9H,mBAAS+H,GAAgB,UAFnC,mBAET7B,EAFS,KAEF8B,EAFE,OAGchI,mBAAS+H,GAAgB,YAHvC,mBAGT3J,EAHS,KAGAuH,EAHA,OAIgB3F,mBAAS+H,GAAgB,UAJzC,mBAITf,EAJS,KAICC,EAJD,OAKUjH,oBAAS,GALnB,mBAKTK,EALS,KAKFmG,EALE,OAMYxG,oBAAS,GANrB,mBAMTO,EANS,KAMDkG,EANC,OAOczG,oBAAS,GAPvB,mBAOTmD,EAPS,KAOAC,EAPA,OAQgBpD,oBAAS,GARzB,mBAQTiI,EARS,KAQCvB,EARD,OASgB1G,oBAAS,GATzB,mBASTkI,EATS,KASCvB,EATD,OAUwB3G,mBAAS+H,GAAgB,UAVjD,mBAUT1E,EAVS,KAUK6D,EAVL,OAY4BlH,oBAAS,GAZrC,mBAYTmI,EAZS,KAYOC,EAZP,KAaRC,GAAmBC,cAEzB,SAASP,GAAgBQ,GACvB,OAAIhB,aAAaiB,QAAQD,GAChBhB,aAAaiB,QAAQD,GAEvBX,EAAcW,GA0CvB,OA/BA7H,qBAAU,WACHwF,IACHO,GAAU,GACVC,GAAY,MAEb,CAACR,IAEJxF,qBACE,WACMyC,IACF2E,EAAS,GACTE,EAAShB,MAIb,CAAC7D,IAGHzC,qBAAU,WACRsH,EAAShB,KACR,CAACA,IAYF,cAAC,IAAD,CAAYyB,OAAQJ,GAApB,SACE,cAACzI,EAAY8I,SAAb,CACErB,MAAO,CACLhH,QACAmG,WACAjG,SACAkG,YACAtD,UACAC,aACA6E,WACAvB,cACAwB,WACAvB,cACAK,WACAC,cACA7I,UACAuH,aACAtC,eACA6D,mBAjBJ,SAoBE,sBAAKjJ,UAAU,OAAf,UACE,cAAC,EAAD,CAAY2G,SA9DpB,WACEkD,EAAS7B,EAAQ,IA6DqBV,SA1DxC,WACEyC,EAAS9B,EAAQ,MA0DX,cAAC,EAAD,CAAaD,MAAOA,EAAOC,MAAOA,EAAOW,kBAjCjD,WACEuB,GAAmBD,GACdA,EAGHE,GAAiBM,OAFjBN,GAAiBO,WA+BZX,GAAY,cAAC,EAAD,CAAUhC,MAAOA,IAC7BiC,GAAY,cAAC,EAAD,YCtGR,MAA0B,uC,MCmB1BW,MAhBf,WACE,OACE,sBAAK5K,UAAU,SAAf,UACE,gDACkB,IAChB,mBAAGA,UAAU,cAAc6K,KAAK,+BAA+B/D,OAAO,SAASgE,IAAI,sBAAnF,+BAIF,mBAAGD,KAAK,2BAA2B/D,OAAO,SAASgE,IAAI,sBAAvD,SACE,qBAAK9K,UAAU,cAAcwB,IAAKuJ,EAAMrJ,IAAI,uB,MCErCsJ,MAVf,WACE,OACE,sBAAKhL,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCESiL,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzI,SAASC,eAAe,SAM1B6H,M","file":"static/js/main.8f41d7d7.chunk.js","sourcesContent":["import \"../css/Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"Header\">\r\n      <h1 className=\"title\">Apple Jam</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default class Cadencer {\r\n  constructor(callback = null, cadence = 1000) {\r\n    this.cadence = cadence;\r\n    this.isPaused = true;\r\n    this.callback = callback;\r\n    this.timerID = undefined;\r\n  }\r\n  _run() {\r\n    if (this.isPaused) return;\r\n    this.callback();\r\n    this.timerID = setTimeout(this._run.bind(this), this.cadence);\r\n  }\r\n  start() {\r\n    if (this.isPaused) {\r\n      this.isPaused = false;\r\n      this._run();\r\n    }\r\n  }\r\n  stop() {\r\n    this.isPaused = true;\r\n    clearTimeout(this.timerID);\r\n  }\r\n  toggle() {\r\n    if (this.isPaused) {\r\n      this.start();\r\n      return true;\r\n    } else {\r\n      this.stop();\r\n      return false;\r\n    }\r\n  }\r\n  setCadence(cadence) {\r\n    this.cadence = cadence;\r\n  }\r\n  getCadence() {\r\n    return this.cadence;\r\n  }\r\n\r\n  setCallback(callback) {\r\n    this.callback = callback;\r\n  }\r\n}\r\n","import \"../css/Apple.css\";\r\nimport green from \"../../assets/img/appleGreen.svg\";\r\nimport red from \"../../assets/img/appleRed.svg\";\r\nimport yellow from \"../../assets/img/appleYellow.svg\";\r\n\r\nconst apples = {\r\n  green,\r\n  red,\r\n  yellow,\r\n};\r\n\r\nfunction Apple(props) {\r\n  return (\r\n    <div className={`Apple ${props.trajectory}`} onAnimationEnd={props.onAnimationEnd} data-key={props.dataKey}>\r\n      <img className=\"apple-image\" src={apples[props.color]} alt=\"apple\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Apple;\r\n","export default __webpack_public_path__ + \"static/media/appleGreen.1a01bfb4.svg\";","export default __webpack_public_path__ + \"static/media/appleRed.8f1c4e77.svg\";","export default __webpack_public_path__ + \"static/media/appleYellow.e55b6d4d.svg\";","export default __webpack_public_path__ + \"static/media/cutting-board.c02faeb4.svg\";","import React from \"react\";\r\n\r\nexport const GameContext = React.createContext();\r\n","import \"../css/Board.css\";\r\nimport board from \"../../assets/img/cutting-board.svg\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { GameContext } from \"./contexts\";\r\n\r\nconst boardStep = 9;\r\nconst boardWidth = 15; //in rem\r\n\r\nfunction Board(props) {\r\n  let [left, setLeft] = useState(0);\r\n  let [keyStuck, setStuck] = useState(false);\r\n  let { pause } = useContext(GameContext);\r\n  let { active } = useContext(GameContext);\r\n  let [maxBoardLeft, setMaxBoardLeft] = useState(0);\r\n\r\n  useEffect(() => {\r\n    function onKeyDown(event) {\r\n      if (!active || pause || keyStuck) return;\r\n      setStuck(true);\r\n      let newLeft = left;\r\n      if (event.keyCode === 37) {\r\n        //key \"Arrow Left\"\r\n        newLeft -= boardStep;\r\n        newLeft = newLeft < 0 ? 0 : newLeft;\r\n      } else if (event.keyCode === 39) {\r\n        //key \"Arrow Right\"\r\n        newLeft += boardStep;\r\n        newLeft = newLeft > maxBoardLeft ? maxBoardLeft : newLeft;\r\n      }\r\n      if (left !== newLeft) {\r\n        setLeft(newLeft);\r\n      }\r\n    }\r\n\r\n    function onKeyUp() {\r\n      setStuck(false);\r\n    }\r\n\r\n    window.addEventListener(\"keydown\", onKeyDown);\r\n    window.addEventListener(\"keyup\", onKeyUp);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", onKeyDown);\r\n      window.removeEventListener(\"keyup\", onKeyUp);\r\n    };\r\n  });\r\n\r\n  useEffect(\r\n    () => {\r\n      props.getBoardInstance(document.getElementById(\"board-image\"));\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  // eslint-disable-next-line\r\n  useEffect(() => {\r\n    function getMaxBoardLeftPosition() {\r\n      const rem = parseFloat(getComputedStyle(document.documentElement).fontSize);\r\n      const board = document.getElementById(\"board\");\r\n      return (board.getBoundingClientRect().right - board.getBoundingClientRect().left) / rem - boardWidth;\r\n    }\r\n    setMaxBoardLeft(getMaxBoardLeftPosition());\r\n  });\r\n\r\n  function onBoardTrackClick(event) {\r\n    if (!active || pause) return;\r\n    const rem = parseFloat(getComputedStyle(document.documentElement).fontSize);\r\n    let newLeft = (event.clientX - event.currentTarget.getBoundingClientRect().x) / rem - boardWidth / 2;\r\n    newLeft = newLeft < 0 ? 0 : newLeft;\r\n    newLeft = newLeft > maxBoardLeft ? maxBoardLeft : newLeft;\r\n    setLeft(newLeft);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Board\" id=\"board\" onClick={onBoardTrackClick}>\r\n      <img className=\"board-image\" id=\"board-image\" style={{ left: `${left}rem` }} src={board} alt=\"board\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","export default __webpack_public_path__ + \"static/media/bonus.99e1af99.wav\";","export default __webpack_public_path__ + \"static/media/fail.99214de6.wav\";","export default __webpack_public_path__ + \"static/media/kick.e27cac46.wav\";","export default __webpack_public_path__ + \"static/media/respawn.4a411067.wav\";","import \"../css/PlayScreen.css\";\r\nimport Cadencer from \"./Cadencer\";\r\nimport Apple from \"./Apple\";\r\nimport Board from \"./Board\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { GameContext } from \"./contexts\";\r\nimport useSound from \"use-sound\";\r\nimport bonusSfxFile from \"../../assets/sound/bonus.wav\";\r\nimport failSfxFile from \"../../assets/sound/fail.wav\";\r\nimport kickSfxFile from \"../../assets/sound/kick.wav\";\r\nimport respawnSfxFile from \"../../assets/sound/respawn.wav\";\r\n\r\nlet cadencer = new Cadencer();\r\nconst colors = [\"red\", \"yellow\", \"green\"];\r\nconst trajectories = [\"trajectory1\", \"trajectory2\", \"trajectory3\"];\r\nconst animationWin = \"left-right-frames\";\r\nconst animationsJumpTemplate = \"up-down-frames\";\r\n\r\nfunction PlayScreen(props) {\r\n  function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  let [apples, setNewApples] = useState([]);\r\n  let [board, setBoard] = useState(null);\r\n  let { pause } = useContext(GameContext);\r\n  let { active } = useContext(GameContext);\r\n  let { restart, setRestart } = useContext(GameContext);\r\n  let { cadence } = useContext(GameContext);\r\n  let { soundEnabled } = useContext(GameContext);\r\n  const [bonusSfx] = useSound(bonusSfxFile);\r\n  const [failSfx] = useSound(failSfxFile);\r\n  const [kickSfx] = useSound(kickSfxFile);\r\n  const [respawnSfx] = useSound(respawnSfxFile);\r\n\r\n  function playSound(sound) {\r\n    if (soundEnabled === \"true\") {\r\n      sound();\r\n    }\r\n  }\r\n\r\n  function getBoardInstance(DOMElement) {\r\n    setBoard(DOMElement);\r\n  }\r\n\r\n  function addNewApple() {\r\n    const color = colors[getRandomInt(0, colors.length - 1)];\r\n    const trajectory = trajectories[getRandomInt(0, trajectories.length - 1)];\r\n    setNewApples([...apples, { color, trajectory, key: Date.now() }]);\r\n    playSound(respawnSfx);\r\n  }\r\n\r\n  cadencer.setCallback(addNewApple);\r\n\r\n  useEffect(() => {\r\n    if (active) {\r\n      if (!pause) {\r\n        document.getElementById(\"appleContainer\").classList.remove(\"freeze\");\r\n        cadencer.start();\r\n      } else {\r\n        document.getElementById(\"appleContainer\").classList.add(\"freeze\");\r\n        cadencer.stop();\r\n      }\r\n    } else {\r\n      document.getElementById(\"appleContainer\").classList.add(\"freeze\");\r\n      cadencer.stop();\r\n    }\r\n  }, [active, pause]);\r\n\r\n  useEffect(() => {\r\n    cadencer.setCadence(cadence);\r\n  }, [cadence]);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (restart) {\r\n        setNewApples([]);\r\n        setRestart(false);\r\n      }\r\n    },\r\n    // eslint-disable-next-line\r\n    [restart]\r\n  );\r\n\r\n  function onAppleAnimationEnd(event) {\r\n    const animation = event.animationName;\r\n    if (animation === animationWin) {\r\n      props.incScore();\r\n      playSound(bonusSfx);\r\n      removeApple();\r\n    } else if (animation.includes(animationsJumpTemplate)) {\r\n      if (isAppleAndBoardCollide()) {\r\n        restartVerticalAnimation();\r\n        playSound(kickSfx);\r\n      } else {\r\n        event.currentTarget.classList.add(\"fall\");\r\n      }\r\n    } else {\r\n      props.decTries();\r\n      playSound(failSfx);\r\n      removeApple();\r\n    }\r\n\r\n    function removeApple() {\r\n      const key = event.currentTarget.dataset.key;\r\n      setNewApples(\r\n        apples.filter((apple) => {\r\n          return Number(apple.key) !== Number(key);\r\n        })\r\n      );\r\n    }\r\n\r\n    function restartVerticalAnimation() {\r\n      event.currentTarget.classList.remove(`trajectory${animation[animation.length - 1]}`);\r\n      void event.currentTarget.offsetWidth;\r\n      event.currentTarget.classList.add(`trajectory${animation[animation.length - 1]}`);\r\n    }\r\n\r\n    function getBorders(DOMElement) {\r\n      return {\r\n        left: DOMElement.getBoundingClientRect().left,\r\n        right: DOMElement.getBoundingClientRect().right,\r\n      };\r\n    }\r\n\r\n    function isAppleAndBoardCollide() {\r\n      const appleBorders = getBorders(event.target);\r\n      const boardBorders = getBorders(board);\r\n      return (\r\n        (appleBorders.left < boardBorders.right && appleBorders.left > boardBorders.left) || (appleBorders.right > boardBorders.left && appleBorders.right < boardBorders.right)\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"PlayScreen\">\r\n      <div className=\"dresser\"></div>\r\n      <div className=\"stove\"></div>\r\n      <div className=\"appleContainer\" id=\"appleContainer\">\r\n        {apples.map((apple) => {\r\n          return <Apple onAnimationEnd={onAppleAnimationEnd} key={apple.key} dataKey={apple.key} color={apple.color} trajectory={apple.trajectory} />;\r\n        })}\r\n      </div>\r\n      <Board getBoardInstance={getBoardInstance} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayScreen;\r\n","import \"../css/Button.css\";\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <button disabled={props.disabled === \"true\" ? true : false} className=\"Button\" id={props.id} onClick={props.onClick}>\r\n      {props.caption}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import \"../css/ScoreBar.css\";\r\n\r\nfunction ScoreBar(props) {\r\n  return (\r\n    <div className=\"ScoreBar\">\r\n      <p>\r\n        Your score :&nbsp;<span className=\"score-amount\">{props.score}</span>\r\n      </p>\r\n      <p>\r\n        Tries left :&nbsp;<span className=\"tries-amount\">{props.tries}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScoreBar;\r\n","import \"../css/ControlsBox.css\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport Button from \"./Button\";\r\nimport ScoreBar from \"./ScoreBar\";\r\nimport { GameContext } from \"./contexts\";\r\n\r\nfunction ControlsBox(props) {\r\n  let [pauseCaption, setPauseCaption] = useState(\"Resume\");\r\n  let [fullScreenCaption, setFullScreenCaption] = useState(\"Fullscreen\");\r\n  let { pause, setPause } = useContext(GameContext);\r\n  let { active, setActive } = useContext(GameContext);\r\n  let { setRestart } = useContext(GameContext);\r\n  let { setGameOver } = useContext(GameContext);\r\n  let { setSettings } = useContext(GameContext);\r\n\r\n  function newGame() {\r\n    if (active) setRestart(true);\r\n    setActive(true);\r\n    setPause(false);\r\n  }\r\n\r\n  function endGame() {\r\n    setActive(false);\r\n    setGameOver(true);\r\n  }\r\n\r\n  function showSettings() {\r\n    if (active) setPause(true);\r\n    setSettings(true);\r\n  }\r\n\r\n  function toggleFullScreen() {\r\n    props.fullScreenToggler();\r\n  }\r\n\r\n  function togglePause() {\r\n    setPause(!pause);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (pause) {\r\n      setPauseCaption(\"Resume\");\r\n    } else {\r\n      setPauseCaption(\"Pause\");\r\n    }\r\n  }, [pause]);\r\n\r\n  useEffect(() => {\r\n    function onFullScreenChange(event) {\r\n      if (fullScreenCaption === \"Fullscreen\") {\r\n        setFullScreenCaption(\"Window\");\r\n      } else {\r\n        setFullScreenCaption(\"Fullscreen\");\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"fullscreenchange\", onFullScreenChange);\r\n    return () => {\r\n      document.removeEventListener(\"fullscreenchange\", onFullScreenChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"ControlsBox\">\r\n      <ScoreBar score={props.score} tries={props.tries} />\r\n      <div className=\"buttons\">\r\n        <Button disabled=\"false\" id=\"newgame\" caption=\"New Game\" onClick={newGame} />\r\n        <Button disabled={`${!active}`} id=\"pause\" caption={pauseCaption} onClick={togglePause} />\r\n        <Button disabled={`${!active}`} id=\"end\" caption=\"End\" onClick={endGame} />\r\n        <Button disabled=\"false\" id=\"settings\" caption=\"Settings\" onClick={showSettings} />\r\n        <Button disabled=\"false\" id=\"fullscreen\" caption={fullScreenCaption} onClick={toggleFullScreen} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ControlsBox;\r\n","import \"../css/ModalContainer.css\";\r\nimport \"../css/GameOver.css\";\r\nimport { useContext } from \"react\";\r\nimport Button from \"./Button\";\r\nimport { GameContext } from \"./contexts\";\r\n\r\nfunction GameOver(props) {\r\n  let { setGameOver } = useContext(GameContext);\r\n  let { setRestart } = useContext(GameContext);\r\n\r\n  function closeWindow() {\r\n    setRestart(true);\r\n    setGameOver(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"ModalContainer\">\r\n      <div className=\"GameOver\">\r\n        <h2>Game Over</h2>\r\n        <p>Your score is : {props.score}</p>\r\n        <Button disabled=\"false\" id=\"gameOverOk\" caption=\"Ok\" onClick={closeWindow} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameOver;\r\n","import \"../css/ModalContainer.css\";\r\nimport \"../css/Settings.css\";\r\nimport { useContext } from \"react\";\r\nimport Button from \"./Button\";\r\nimport { GameContext } from \"./contexts\";\r\n\r\nfunction Settings() {\r\n  let { setSettings } = useContext(GameContext);\r\n  let { cadence, setCadence } = useContext(GameContext);\r\n  let { maxTries, setMaxTries } = useContext(GameContext);\r\n  let { soundEnabled, setSoundEnabled } = useContext(GameContext);\r\n\r\n  function onCadenceChange(event) {\r\n    setCadence(event.target.value);\r\n    localStorage.setItem(\"cadence\", event.target.value);\r\n  }\r\n\r\n  function onMaxTriesChange(event) {\r\n    setMaxTries(event.target.value);\r\n    localStorage.setItem(\"tries\", event.target.value);\r\n  }\r\n\r\n  function onSoundStateChange(event) {\r\n    setSoundEnabled(String(event.target.checked));\r\n    localStorage.setItem(\"sound\", String(event.target.checked));\r\n  }\r\n\r\n  function closeWindow() {\r\n    setSettings(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"ModalContainer\">\r\n      <div className=\"Settings\">\r\n        <h2>Settings</h2>\r\n        <div>\r\n          <div className=\"control\">\r\n            <label htmlFor=\"respawn\">Apples Respawn Frequency</label>\r\n            <select id=\"respawn\" name=\"respawn\" value={cadence} onChange={onCadenceChange}>\r\n              <option value=\"7000\">7 sec</option>\r\n              <option value=\"10000\">10 sec</option>\r\n              <option value=\"12000\">12 sec</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"control\">\r\n            <label htmlFor=\"respawn\">Max Tries</label>\r\n            <select id=\"respawn\" name=\"respawn\" value={maxTries} onChange={onMaxTriesChange}>\r\n              <option value=\"3\">3</option>\r\n              <option value=\"5\">5</option>\r\n              <option value=\"7\">7</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"control\">\r\n            <label htmlFor=\"sound\">Enable Sound</label>\r\n            <input id=\"sound\" type=\"checkbox\" name=\"sound\" checked={soundEnabled === \"true\" ? true : false} onChange={onSoundStateChange} />\r\n          </div>\r\n        </div>\r\n        <Button disabled=\"false\" id=\"settingsOk\" caption=\"Ok\" onClick={closeWindow} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","import { useState, useEffect } from \"react\";\r\nimport \"../css/Game.css\";\r\nimport PlayScreen from \"./PlayScreen\";\r\nimport ControlsBox from \"./ControlsBox\";\r\nimport GameOver from \"./GameOver\";\r\nimport Settings from \"./Settings\";\r\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\r\nimport { GameContext } from \"./contexts\";\r\n\r\nconst initialValues = {\r\n  tries: 3,\r\n  cadence: 10000,\r\n  sound: \"true\",\r\n};\r\n\r\nfunction Game() {\r\n  let [score, setScore] = useState(0);\r\n  let [tries, setTries] = useState(getInitialValue(\"tries\"));\r\n  let [cadence, setCadence] = useState(getInitialValue(\"cadence\"));\r\n  let [maxTries, setMaxTries] = useState(getInitialValue(\"tries\"));\r\n  let [pause, setPause] = useState(true);\r\n  let [active, setActive] = useState(false);\r\n  let [restart, setRestart] = useState(true);\r\n  let [gameOver, setGameOver] = useState(false);\r\n  let [settings, setSettings] = useState(false);\r\n  let [soundEnabled, setSoundEnabled] = useState(getInitialValue(\"sound\"));\r\n\r\n  let [fullScreenMode, setFullScreenMode] = useState(false);\r\n  const fullScreenHandle = useFullScreenHandle();\r\n\r\n  function getInitialValue(item) {\r\n    if (localStorage.getItem(item)) {\r\n      return localStorage.getItem(item);\r\n    }\r\n    return initialValues[item];\r\n  }\r\n\r\n  function incScore() {\r\n    setScore(score + 1);\r\n  }\r\n\r\n  function decTries() {\r\n    setTries(tries - 1);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!tries) {\r\n      setActive(false);\r\n      setGameOver(true);\r\n    }\r\n  }, [tries]);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (restart) {\r\n        setScore(0);\r\n        setTries(maxTries);\r\n      }\r\n    },\r\n    // eslint-disable-next-line\r\n    [restart]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setTries(maxTries);\r\n  }, [maxTries]);\r\n\r\n  function fullScreenToggler() {\r\n    setFullScreenMode(!fullScreenMode);\r\n    if (!fullScreenMode) {\r\n      fullScreenHandle.enter();\r\n    } else {\r\n      fullScreenHandle.exit();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FullScreen handle={fullScreenHandle}>\r\n      <GameContext.Provider\r\n        value={{\r\n          pause,\r\n          setPause,\r\n          active,\r\n          setActive,\r\n          restart,\r\n          setRestart,\r\n          gameOver,\r\n          setGameOver,\r\n          settings,\r\n          setSettings,\r\n          maxTries,\r\n          setMaxTries,\r\n          cadence,\r\n          setCadence,\r\n          soundEnabled,\r\n          setSoundEnabled,\r\n        }}\r\n      >\r\n        <div className=\"Game\">\r\n          <PlayScreen incScore={incScore} decTries={decTries} />\r\n          <ControlsBox score={score} tries={tries} fullScreenToggler={fullScreenToggler} />\r\n          {gameOver && <GameOver score={score} />}\r\n          {settings && <Settings />}\r\n        </div>\r\n      </GameContext.Provider>\r\n    </FullScreen>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","export default __webpack_public_path__ + \"static/media/rsSchoolJS.3e138c06.svg\";","import logo from \"../../assets/img/rsSchoolJS.svg\";\r\nimport \"../css/Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"Footer\">\r\n      <p>\r\n        Minsk, 2021, by{\" \"}\r\n        <a className=\"github-link\" href=\"https://github.com/vitaly-kn\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Vitaly Kniazev\r\n        </a>\r\n      </p>\r\n      <a href=\"https://rs.school/react/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <img className=\"course-logo\" src={logo} alt=\"React Course\" />\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import Header from \"./Header\";\nimport Game from \"./Game\";\nimport Footer from \"./Footer\";\nimport \"../css/App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Game />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/js/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}